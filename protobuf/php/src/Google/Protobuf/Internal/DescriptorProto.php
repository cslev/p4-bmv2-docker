<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/protobuf/descriptor.proto

namespace Google\Protobuf\Internal;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBWire;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\InputStream;

use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Describes a message type.
 * </pre>
 *
 * Protobuf type <code>google.protobuf.DescriptorProto</code>
 */
class DescriptorProto extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>optional string name = 1;</code>
     */
    private $name = '';
    private $has_name = false;
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>
     */
    private $field;
    private $has_field = false;
    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>
     */
    private $extension;
    private $has_extension = false;
    /**
     * <code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>
     */
    private $nested_type;
    private $has_nested_type = false;
    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>
     */
    private $enum_type;
    private $has_enum_type = false;
    /**
     * <code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>
     */
    private $extension_range;
    private $has_extension_range = false;
    /**
     * <code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>
     */
    private $oneof_decl;
    private $has_oneof_decl = false;
    /**
     * <code>optional .google.protobuf.MessageOptions options = 7;</code>
     */
    private $options = null;
    private $has_options = false;
    /**
     * <code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>
     */
    private $reserved_range;
    private $has_reserved_range = false;
    /**
     * <pre>
     * Reserved field names, which may not be used by fields in the same message.
     * A given name may only be reserved once.
     * </pre>
     *
     * <code>repeated string reserved_name = 10;</code>
     */
    private $reserved_name;
    private $has_reserved_name = false;

    public function __construct() {
        \GPBMetadata\Google\Protobuf\Internal\Descriptor::initOnce();
        parent::__construct();
    }

    /**
     * <code>optional string name = 1;</code>
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * <code>optional string name = 1;</code>
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;
        $this->has_name = true;
    }

    public function hasName()
    {
        return $this->has_name;
    }

    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>
     */
    public function getField()
    {
        return $this->field;
    }

    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>
     */
    public function setField(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Protobuf\Internal\FieldDescriptorProto::class);
        $this->field = $var;
        $this->has_field = true;
    }

    public function hasField()
    {
        return $this->has_field;
    }

    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>
     */
    public function getExtension()
    {
        return $this->extension;
    }

    /**
     * <code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>
     */
    public function setExtension(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Protobuf\Internal\FieldDescriptorProto::class);
        $this->extension = $var;
        $this->has_extension = true;
    }

    public function hasExtension()
    {
        return $this->has_extension;
    }

    /**
     * <code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>
     */
    public function getNestedType()
    {
        return $this->nested_type;
    }

    /**
     * <code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>
     */
    public function setNestedType(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Protobuf\Internal\DescriptorProto::class);
        $this->nested_type = $var;
        $this->has_nested_type = true;
    }

    public function hasNestedType()
    {
        return $this->has_nested_type;
    }

    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>
     */
    public function getEnumType()
    {
        return $this->enum_type;
    }

    /**
     * <code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>
     */
    public function setEnumType(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Protobuf\Internal\EnumDescriptorProto::class);
        $this->enum_type = $var;
        $this->has_enum_type = true;
    }

    public function hasEnumType()
    {
        return $this->has_enum_type;
    }

    /**
     * <code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>
     */
    public function getExtensionRange()
    {
        return $this->extension_range;
    }

    /**
     * <code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>
     */
    public function setExtensionRange(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Protobuf\Internal\DescriptorProto_ExtensionRange::class);
        $this->extension_range = $var;
        $this->has_extension_range = true;
    }

    public function hasExtensionRange()
    {
        return $this->has_extension_range;
    }

    /**
     * <code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>
     */
    public function getOneofDecl()
    {
        return $this->oneof_decl;
    }

    /**
     * <code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>
     */
    public function setOneofDecl(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Protobuf\Internal\OneofDescriptorProto::class);
        $this->oneof_decl = $var;
        $this->has_oneof_decl = true;
    }

    public function hasOneofDecl()
    {
        return $this->has_oneof_decl;
    }

    /**
     * <code>optional .google.protobuf.MessageOptions options = 7;</code>
     */
    public function getOptions()
    {
        return $this->options;
    }

    /**
     * <code>optional .google.protobuf.MessageOptions options = 7;</code>
     */
    public function setOptions(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Internal\MessageOptions::class);
        $this->options = $var;
        $this->has_options = true;
    }

    public function hasOptions()
    {
        return $this->has_options;
    }

    /**
     * <code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>
     */
    public function getReservedRange()
    {
        return $this->reserved_range;
    }

    /**
     * <code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>
     */
    public function setReservedRange(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Protobuf\Internal\DescriptorProto_ReservedRange::class);
        $this->reserved_range = $var;
        $this->has_reserved_range = true;
    }

    public function hasReservedRange()
    {
        return $this->has_reserved_range;
    }

    /**
     * <pre>
     * Reserved field names, which may not be used by fields in the same message.
     * A given name may only be reserved once.
     * </pre>
     *
     * <code>repeated string reserved_name = 10;</code>
     */
    public function getReservedName()
    {
        return $this->reserved_name;
    }

    /**
     * <pre>
     * Reserved field names, which may not be used by fields in the same message.
     * A given name may only be reserved once.
     * </pre>
     *
     * <code>repeated string reserved_name = 10;</code>
     */
    public function setReservedName(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->reserved_name = $var;
        $this->has_reserved_name = true;
    }

    public function hasReservedName()
    {
        return $this->has_reserved_name;
    }

}

