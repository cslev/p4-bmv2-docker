FROM ubuntu:16.04
LABEL maintainer="cslev <cslev@gmx.com>"

# update bashrc to make it fancier
COPY bashrc_root.p4c /root/.bashrc

# packages needed for compilation
ENV DEV_DEPS automake \
         clang \
         curl \
         git \
         libjudy-dev \
         libpcap-dev \
         libboost-dev \
         libboost-program-options-dev \
         libboost-system-dev \
         libboost-filesystem-dev \
         libboost-thread-dev \
         libboost-iostreams-dev \
         libboost-graph-dev \
         libtool \
         pkg-config \
	 libssl-dev \
	 automake \
	 autoconf \
	 curl \
	 unzip \
 	 ca-certificates \
         libreadline-dev \
	 libgflags-dev \
         bison \
         flex \
         libfl-dev \
         cmake

# packages needed for compilation and run
ENV RUN_DEPS sudo \
         build-essential \
	 make \
         g++-6 \
         libgc-dev \
         libgmp-dev \
	 libboost-program-options1.58.0 \
	 libboost-system1.58.0 \
         libboost-filesystem1.58.0 \
         libboost-thread1.58.0 \
         libboost-iostreams1.58.0 \
         libgmp10 \
         libjudydebian1 \
	 nano \
         libpcap0.8 \
	 net-tools \
	 python \
         python-scapy \
         python-ipaddr \
         tcpdump

# protobuf
RUN apt-get update && \
    apt-get install -y --no-install-recommends $DEV_DEPS $RUN_DEPS
COPY protobuf /opt/protobuf/
WORKDIR /opt/protobuf/
RUN ./autogen.sh && \
    ./configure && \
    make -j2 && \
    make install  && \
    ldconfig && \
    rm -rf /opt/protobuf && \
    echo "PROTOBUF installed"


#grpc - too many submodules and tag based checkout would cause failure
#so instead of copying a downloaded version of grpc, we start it from scratch
WORKDIR /opt/
RUN git clone https://github.com/google/grpc.git
WORKDIR /opt/grpc/
RUN git checkout tags/v1.3.2 && \
    git submodule update --init --recursive

RUN make -j2 && \
    make install && \
    ldconfig && \
    echo "GRPC installed"

#PI
WORKDIR /opt/
RUN git clone https://github.com/p4lang/PI/
WORKDIR /opt/PI/
RUN git submodule update --init --recursive
RUN ./autogen.sh && \
    ./configure --with-proto --with-fe-cpp --without-internal-rpc --without-cli  && \
    make -j2 && \
    make install && \
    ldconfig && \
    echo "PI installed"


#P4C
WORKDIR /opt/
RUN git clone --recursive https://github.com/p4lang/p4c.git
WORKDIR /opt/p4c/
RUN mkdir build && \
    cd build && \
    cmake .. && \
    make -j2 && \
    make install && \
    ldconfig
WORKDIR /
RUN apt-get purge -y $DEV_DEPS && \
    apt-get autoremove --purge -y && \
    apt-get install -y --no-install-recommends $RUN_DEPS && \
    rm -rf /var/cache/apt/* \
	   /var/lib/apt/lists/ \
 	   /var/cache/debconf/* \
	   /var/lib/dpkg/*-old \
	   /var/log/apt/* \
	   /opt/grpc/ \
           /opt/protobuf \
	   /opt/p4c \
    	   /opt/PI && \
    echo "p4c image ready"

