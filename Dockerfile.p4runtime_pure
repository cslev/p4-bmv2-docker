FROM ubuntu:16.04
LABEL maintainer="cslev <cslev@gmx.com>"

# update bashrc to make it fancier
COPY bashrc_root.p4runtime.pure /root/.bashrc

# packages needed for compilation
ENV DEV_DEPS automake \
     build-essential \
     clang \
     curl \
     g++-6 \
     git \
     libjudy-dev \
     libgmp-dev \
     libpcap-dev \
     libboost-dev \
     libboost-program-options-dev \
     libboost-system-dev \
     libboost-filesystem-dev \
     libboost-thread-dev \
     libboost-iostream-dev \
     libtool \
     pkg-config \
	 libssl-dev \
	 automake \
	 autoconf \
	 make \
	 curl \
	 unzip \
 	 ca-certificates \
     libreadline-dev \
	 libgflags-dev \
	 libnanomsg-dev \
         python-setuptools \
         python-pip \
         libpython2.7-dev \
         libevent-dev


# packages needed for compilation and run
ENV RUN_DEPS sudo \
    libboost-program-options1.58.0 \
    libboost-system1.58.0 \
    libboost-filesystem1.58.0 \
    libboost-thread1.58.0 \
    libboost-iostream1.58.0 \
    libgmp10 libjudydebian1 \
    libpcap0.8 \
    net-tools \
    python \
    python-pip \
    python-dev \
    python-distlib \
    pypy-setuptools \
    python-dist-utils-extra \
    python-setuptools


RUN apt-get update && \
    apt-get install -y --no-install-recommends $DEV_DEPS $RUN_DEPS && \
    pip install --upgrade pip


#grpc - too many submodules and tag based checkout would cause failure
#so instead of copying a downloaded version of grpc, we start it from scratch
WORKDIR /opt/
RUN git clone https://github.com/google/grpc.git
WORKDIR /opt/grpc/
RUN git checkout tags/v1.3.2 && \
    git submodule update --init --recursive

#protobuf is inside the third_party directory
WORKDIR /opt/grpc/third_party/protobuf
RUN ./autogen.sh && \
    ./configure && \
    make -j2 && \
    make install  && \
    ldconfig
#install protobuf python packages
WORKDIR /opt/grpc/third_party/protobuf/python
RUN python setup.py install && \
    ldconfig

WORKDIR /opt/grpc/
RUN make -j2 && \
    make grpc_cli && \
    make install && \
    ldconfig && \
    cp /grpc/bins/opt/* /usr/bin/ && \
    python setup.py install && \
    echo "GRPC installed"

#PI
WORKDIR /opt/
RUN git clone https://github.com/p4lang/PI/
WORKDIR /opt/PI/
RUN git submodule update --init --recursive
RUN ./autogen.sh && \
    ./configure --with-proto --without-internal-rpc --with-cli --without-bmv2 --with-fe-cpp && \
    make -j2 && \
    make install && \
    ldconfig && \
    echo "PI installed"


WORKDIR /
RUN apt-get purge -y $DEV_DEPS && \
    apt-get autoremove --purge -y && \
    apt-get install -y --no-install-recommends $RUN_DEPS && \
    cd .. && \
    rm -rf /var/cache/apt/* \
	   /var/lib/apt/lists/ \
 	   /var/cache/debconf/* \
	   /var/lib/dpkg/*-old \
	   /var/log/apt/* \
	   /opt/behavioral-model/ \
    	   /opt/PI && \
    echo "p4-bmv2-p4runtime-pure image ready"

